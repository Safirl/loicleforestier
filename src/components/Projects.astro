---
import projects from "../data/projects";
---

<div class="container">
    <div class="projects">
        <div class="projectFilter">
            <button id="filterDev">Dev</button>
            <button id="filterFilms">Films</button>
        </div>
        <ul class="projectsList">
            {
                projects.map((project) => (
                    <li
                        class="projectItem"
                        data-category={project.category}
                        data-key={project.id}
                    >
                        <a class="primaryLink" href={project.link}>
                            {project.title}
                        </a>
                        {project.secondaryLink && (
                            <a
                                class="secondaryLink"
                                href={project.secondaryLink}
                            >
                                {project.secondaryLinkName}
                            </a>
                        )}
                    </li>
                ))
            }
        </ul>
    </div>
    <div class="projectImage">
        <img src="/images/project1.png" alt="" />
        <p class="projectDescription">
            {projects[0].description}
        </p>
    </div>
</div>
<style lang="scss">
    @use "../styles/_variables";

    .container {
        display: flex;
        justify-content: center;
        gap: 180px;
        width: 100%;
        margin: 0px 100px 0px 100px;
    }

    .projects {
        display: flex;
        flex-direction: column;
        gap: variables.$spacing-l;
        width: 200px;
    }

    .projectFilter {
        display: flex;
            gap: variables.$spacing-s;
    }

    .projectsList {
        display: flex;
        flex-direction: column;
        gap: variables.$spacing-m;

        .projectItem {
            display: flex;
            flex-direction: column;
            gap: variables.$spacing-s;
            transition: ease-in-out opacity .2s;

            &.hidden {
                opacity: 50%;
            }

                .primaryLink {
                    font-size: variables.$font-size-l;
                }
        
                .secondaryLink {
                    font-size: variables.$font-size-m;
                    display: none;
        
                    &.visible {
                        display: inherit;
                    }
                }
        }

    }

    .projectImage {
        display: flex;
        flex-direction: column;
        gap: variables.$spacing-m;

        img {
            width: 60vh;
            max-width: 600px;
        }
    }
</style>

<script>
import projects from "../data/projects";

    interface project {
        id: number;
        title: string;
        description: string;
        image: string;
        category: string;
        link: string;
        secondaryLink: string;
        secondaryLinkName: string;
    }

    let isDevFilterActive = false;
    let isMovieFilterActive = false;
    let currentProject: project|undefined;

    document.addEventListener("DOMContentLoaded", () => {
        const filterDev = document.getElementById("filterDev");
        const filterMovie = document.getElementById("filterFilms");
        const projectItems = document.querySelectorAll(".projectItem") as NodeListOf<HTMLLIElement>;
        const projectDescription = document.querySelector(".projectDescription") as HTMLParagraphElement;
        if (!filterDev || !filterMovie || !projectItems || !projectDescription) {
            return;
        }

        projectItems.forEach((item) => {
            item.addEventListener("pointerenter", () => {
                const oldItem = Array.from(projectItems).find((item) => item.dataset.key === currentProject?.id.toString())
                if (oldItem) {
                    const oldSecondaryLink = Array.from(oldItem.children).find((child) => 
                        child.classList.contains("secondaryLink")
                    );
                    oldSecondaryLink?.classList.remove("visible")
                }

                currentProject = projects.find((project) => project.id.toString() === item.dataset.key)
                if (!currentProject) {
                    return;   
                }
                projectDescription.innerHTML = currentProject.description;
                const secondaryLink = Array.from(item.children).find((child) => 
                    child.classList.contains("secondaryLink")
                );
                if (secondaryLink) {
                    secondaryLink.classList.add("visible")
                    
                }
            })
        })

        //Filter for web projects
        filterDev.addEventListener("click", () => {
            isDevFilterActive = !isDevFilterActive
            if (isDevFilterActive) {
                isMovieFilterActive = !isDevFilterActive
            }
            updateActiveItems()
        });

        //Filter for movie projects
        filterMovie.addEventListener("click", () => {
            isMovieFilterActive = !isMovieFilterActive
            if (isMovieFilterActive) {
                isDevFilterActive = !isMovieFilterActive
            }
            updateActiveItems()
        });

        function updateActiveItems() {
            projectItems.forEach((item) => {
                if (item.dataset.category === "web") {
                    isMovieFilterActive ? item.classList.add("hidden") : item.classList.remove("hidden")
                } else if (item.dataset.category === "movie") {
                    isDevFilterActive ? item.classList.add("hidden") : item.classList.remove("hidden")
                }
            });
        }
    });
</script>
